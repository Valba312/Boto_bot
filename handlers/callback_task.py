import logging
from telebot.types import CallbackQuery
from telebot.apihelper import ApiTelegramException
from db import repository as db
from keyboards import list_kb
from utils import throttling_decorator

logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å, —á—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å status_key ('ne', 'accepted') –≤ —Ç–µ–∫—Å—Ç –¥–ª—è –ë–î:
STATUS_HUMAN = {
    'ne': '–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ',
    'accepted': '–ø—Ä–∏–Ω—è—Ç–æ'
}

def register(bot):
    @throttling_decorator
    @bot.callback_query_handler(lambda cb: cb.data.startswith('task|'))
    def cb_task(cb: CallbackQuery):
        try:
            # –†–∞–∑–±–æ—Ä callback_data: task|<message_id>|<status_key>|<thread_id>
            _, mid_s, status_key, tid_s = cb.data.split('|', 3)
            mid = int(mid_s)
            tid = None if tid_s == 'None' else int(tid_s)
            cid = cb.message.chat.id
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ callback task")
            return bot.answer_callback_query(cb.id, "‚ùó –û—à–∏–±–∫–∞ –∫–Ω–æ–ø–∫–∏", show_alert=True)

        # 1) –ß–∏—Ç–∞–µ–º –∑–∞–¥–∞—á—É –∏–∑ –ë–î, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç
        try:
            row = db.get_task_by_id(cid, tid, mid)
            if not row:
                # –í–¥—Ä—É–≥ –≤ –ë–î —É–∂–µ –Ω–µ—Ç —Ç–∞–∫–æ–π –∑–∞–ø–∏—Å–∏?
                raise LookupError("–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î")
            _, text, _, _ = row
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –ø–æ message_id")
            return bot.answer_callback_query(cb.id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–¥–∞—á—É", show_alert=True)

        # 2) –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –ø–æ —Å—Ç–∞—Ç—É—Å—É (–Ω–∞ –±—É–¥—É—â–µ–µ ‚Äî –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è)
        prefix = {
            'ne': '‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞',
            'accepted': '‚úÖ –ü—Ä–∏–Ω—è—Ç–∞—è –∑–∞–¥–∞—á–∞'
        }.get(status_key, 'üìå –ó–∞–¥–∞—á–∞')

        # 3) –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å reply –∫ —Ç–æ–º—É —Å–∞–º–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é mid
        try:
            bot.send_message(
                cid,
                f"{prefix}: {text}",
                reply_to_message_id=mid,
                message_thread_id=tid
            )
        except ApiTelegramException as e:
            # –ï—Å–ª–∏ Telegram –æ—Ç–≤–µ—á–∞–µ—Ç ‚Äúmessage to be replied not found‚Äù ‚Üí –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ
            desc = getattr(e, 'result_json', {}).get('description', '') or ''
            if e.error_code == 400 and 'message to be replied not found' in desc:
                # ---- –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –∏–∑ –ë–î ----
                try:
                    db.delete_task(cid, tid, mid)
                    logger.info(f"callback_task: —É–¥–∞–ª–µ–Ω–∞ –±–∏—Ç–∞—è –∑–∞–¥–∞—á–∞ mid={mid}, chat={cid}, thread={tid}")
                except Exception:
                    logger.exception("callback_task: –æ—à–∏–±–∫–∞ –ø—Ä–∏ delete_task")

                # ---- –û–±–Ω–æ–≤–ª—è–µ–º (–ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º) –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ñ–∏–ª—å—Ç—Ä–∞ ----
                try:
                    # –ù—É–∂–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ –ë–î (—á–µ–ª–æ–≤–µ–∫–æ–ø–æ–Ω—è—Ç–Ω—ã–π):
                    human_status = STATUS_HUMAN.get(status_key, None)
                    if human_status is not None:
                        # –ë–µ—Ä—ë–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è message_id –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
                        remaining_mids = db.get_tasks_by_status(cid, tid, human_status)
                        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é inline‚Äê–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                        new_kb = list_kb(cid, remaining_mids, status_key, tid)
                        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Ç–æ–π –∂–µ –∫–Ω–æ–ø–∫–æ–π ¬´task|...¬ª):
                        bot.edit_message_reply_markup(
                            chat_id=cid,
                            message_id=cb.message.message_id,
                            reply_markup=new_kb
                        )
                    else:
                        # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º status_key –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω, –ø—Ä–æ—Å—Ç–æ —É–±–µ—Ä—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É:
                        bot.edit_message_reply_markup(
                            chat_id=cid,
                            message_id=cb.message.message_id,
                            reply_markup=None
                        )
                except Exception:
                    logger.exception("callback_task: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏")

                # ---- –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ alert, —á—Ç–æ ‚Äú–±–∏—Ç–∞—è‚Äù –∑–∞–¥–∞—á–∞ —É–±—Ä–∞–Ω–∞ ----
                return bot.answer_callback_query(
                    cb.id,
                    "‚ùó –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞—á–µ–π —É–¥–∞–ª–µ–Ω–æ, –∑–∞–¥–∞—á–∞ —É–±—Ä–∞–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.",
                    show_alert=True
                )
            else:
                # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–Ω–µ ‚Äúmessage not found‚Äù)
                logger.exception("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–¥–∞—á–µ–π")
                return bot.answer_callback_query(
                    cb.id,
                    "‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–¥–∞—á–∏.",
                    show_alert=True
                )

        # 4) –ï—Å–ª–∏ reply –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º callback –±–µ–∑ –∞–ª–µ—Ä—Ç–∞
        try:
            bot.answer_callback_query(cb.id)
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ –≤ answer_callback_query")
